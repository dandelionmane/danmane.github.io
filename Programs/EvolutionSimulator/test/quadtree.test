xBound = 1000
yBound = 1000

assertEq = (expected, actual) -> 
	if expected != actual
		throw new Error("expected: " + expected + "actual: " + actual)
assertTrue = (bool, message = "") -> 
	if not bool
		throw new Error("assertTrue failed: " + message)
assertLength = (expected, arr) -> 
	if arr.length isnt expected
		throw new Error("Expected array: " + arr + " to have length: " + expected)

testAddRemove = () ->
	q = new QuadTree(xBound,yBound,10)
	points = {} 
	for id in [0...100000]
		p = Vector2D.randomVector(xBound, yBound)
		points[id] = p 
		q.addObject(id, p)
	for id in [0...50]
		q.removeObject(id)
	for id in [5000...6000]
		pt = q.id2point[id]
		console.log q.quickQuery(pt, 100).length + "::" + q.circleQuery(pt, 100).length

testAddRemove()

buildGridQT = () -> 
	q = new QuadTree(100, 100, 10)
	points = {}
	for x in [0..10]
		for y in [0..10]
			id = x + "," + y
			p = new Vector2D(x,y)
			points[id] = p
			q.addObject(id, p)
	q

qgrid = buildGridQT()
v0 = new Vector2D(0,0)
testCircleQuery = () -> 
	center = new Vector2D(5, 5)
	query1 = qgrid.circleQuery(center, 10)
	assertLength(121, query1)

	query2 = qgrid.circleQuery(center, 0)
	assertLength(1, query2)

	v0 = new Vector2D(0,0)
	query3 = qgrid.circleQuery(v0, 10)
	assertLength(90, query3)

	for x in [0..10]
		for y in [0..10]
			id = x + "," + y
			qgrid.removeObject(id)
	query4 = qgrid.circleQuery(v0, 100)
	assertLength(0, query4)
	
testCircleQuery()



	

